name: GitHub Actions CD
run-name: Deploy Spring Boot
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
jobs:
  Push-To-Image-Repo:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: hrm-be
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN }}

      - name: Authen DO registry
        run: doctl registry login

      - name: Build docker image
        run: docker build . -t ${{ env.IMAGE_NAME }}:latest

      - name: Tag image with DO
        run: docker tag ${{ env.IMAGE_NAME }}:latest registry.digitalocean.com/capstone-registry/${{ env.IMAGE_NAME }}:latest

      - name: Push image to registry
        run: docker push registry.digitalocean.com/capstone-registry/${{ env.IMAGE_NAME }}:latest

      - name: Trigger garbage collection
        run: doctl registry garbage-collection start -f --include-untagged-manifests

  Trigger-Redeploy:
    needs: Push-To-Image-Repo
    runs-on: ubuntu-latest
    env:
      DROPLET_NAME: hrm-droplet
      DROPLET_IP: 209.38.56.58
      SERVICE: springboot
      SSH_KEY_PATH: ~/id_rsa
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN }}

      - name: Setup SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ${{ env.SSH_KEY_PATH }}
          chmod 600 ${{ env.SSH_KEY_PATH }}

      - name: Redeploy and clean up
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ env.DROPLET_IP }}
          username: root
          port: 22
          key_path: ${{ env.SSH_KEY_PATH }}
          script:
            doctl compute ssh ${{ env.DROPLET_NAME }} --ssh-key-path ${{ env.SSH_KEY_PATH }} --ssh-command docker compose pull ${{ env.SERVICE }}
            doctl compute ssh ${{ env.DROPLET_NAME }} --ssh-key-path ${{ env.SSH_KEY_PATH }} --ssh-command docker compose -f docker-compose.yml up --build --force-recreate -d --no-deps ${{ env.SERVICE }}
            doctl compute ssh ${{ env.DROPLET_NAME }} --ssh-key-path ${{ env.SSH_KEY_PATH }} --ssh-command docker image prune -f